// WARNING: BEFORE YOU START CODING, MAKE SURE YOU'VE DOWNLOADED THE VISUAL CODE STUDIO APPLICATION OR SOMETHING CLOSE, NOT NOTEPAD++
// Whether you're using C# or Java Script, the same commands apply when it comes to coding, so here is basic definition of each:


// 1. Command Types

// Command Types are the commands that, no matter what is being used, fall under one of these categories:

// String: A class that follows a sequence of characters
// Integer: A class that represents a whole number (I.E. public int Heart; can now be used for a reference {Heart = 100})
// Float: A class that represents a fractional (floating point) number (I.E. 3.14)
// Print: A class that
// Void:
// =: Assign something to a certain value
// ==: Check the equality
// !=: Check the unequality
// >=, >:
// <=, >:


// 2. Command Scripts

// Unity has thousands upon thousands of commands available from the beginning, and each one works in a certain way:

// attribute:
// Awake():
// checked:
// class:
// ctor: Used as a shorthand for "constructor"
// cw:
// do:
// else: The second half of the "If-Else Clause", used 
// enum:
// equals:
// exception:
// fact:
// for:
// foreach:
// forr:
// FixedUpdate():
// if: The first half of the "If-Else Clause", used
// ifd:
// indexer:
// interface:
// invoke:
// iterator:
// iterindex:
// lock:
// LateUpdate()
// mbox:
// namespace:
// OnAnimatorIK:
// OnAnimatorMove:
// OnApplicationFocus: Activates when the player clicks out of the current application (I.E. pausing game when clicking on desktop)
// OnApplicationPause: Activates when the player manually clicks the pause button (I.E. bringing up game menu with options and quit)
// OnApplicationQuit: Activates when the player manually clicks the quit button (I.E. being taken back to the title screen)
// OnAudioFilterRead:
// OnBecameInvisible: Activates when an object is no longer visible by any camera (I.E.
// OnBecameVisible: Activates when an object is becomes visible by any camera (I.E.
// OnCollisionEnter:
// OnCollisionEnter2D:
// OnCollisionExit:
// OnCollisionExit2D:
// OnCollisionStay:
// OnCollisionStay2D:
// OnConnectedToServer: Activates when the player successfully connects to a server (I.E. MMO telling player which server they're in)
// OnControllerColliderHit:
// OnDestroy: Activates when the object in question is destroyed (I.E. when Minion Bugs are destroyed in Galaga)
// OnDisable: Activates when an object becomes inactive, can trigger after OnDestroy (I.E. DÃ¦mons disappear from battle in Berseria)
// OnDisconnectedFromServer: Activates when the player loses connection to server (I.E. Dissidan NT connection error in middle of game)
// OnDrawGizmos:
// OnDrawGizmosSelected:
// OnEnable: Activates when an object becomes active (I.E.
// OnFailedToConnect: Activates when the player fails to connect to a server (I.E. Fire Emblem Heroes server connection error)
// OnFailedToConnectToMasterServer: Activates when player can't connect to main server (I.E. Tales of Link connection error via update)
// OnGUI:
// OnJointBreak:
// OnJointBreak2D:
// OnMasterServerEvent: Activates when events are reported from the Master Server (I.E. relating holiday exclusive maps to all players) 
// OnMouseDown: Activates when the mouse button has been clicked on an object (I.E. clicking on a cube)
// OnMouseDrag: Activates when the mouse button has been held down on an object (I.E. click and dragging an Illustrator shape)
// OnMouseEnter: Activates when the mouse is hovering over an object (I.E. highlighting over an external link, adding an underline)
// OnMouseExit: Activates after the mouse exits an object (I.E. underline disappears from the external link when hovered over)
// OnMouseOver: Activates while the mouse is held over an object, after OnMouseEnter (I.E. holding mouse over bookmark for many seconds)
// OnMouseUp: Activates after the mouse button is released (I.E. clicking on external link takes user to different link)
// OnMouseUpAsButton: Same as above, albeit released on same object clicked (I.E. external link works only when released on link)
// OnNetworkInstantiate: Calls on objects connected via Network.Instantiate (I.E. s
// OnParticleCollision: Activates when an object collides with others, often used for damage dealing (I.E. the asteroids in Asteroids)
// OnParticleTrigger: 
// OnPlayerConnected: Activates when the player connects to a server (I.E. logging onto any MMO server ever)
// OnPlayerDisconnected: Activates when the player disconnects to a server (I.E. logging off of any MMO server ever)
// OnPostRender: Activates after the camera renders the scene (I.E.
// OnPreCull: Activates before a camera culls the scene (I.E.
// OnPreRender: , only works if script is enabled and connected to a camera
// OnRenderImage: 
// OnRenderObject:
// OnSerializeNetworkView:
// OnServerInitialized:
// OnTransformChildrenChanged:
// OnTransformParentChanged:
// OnTriggerEnter:
// OnTriggerEnter2D:
// OnTriggerExit:
// OnTriggerExit2D:
// OnTriggerStay:
// OnTriggerStay2D:
// OnValidate: 
// OnWillRenderObject:
// prop:
// propfull:
// propg:
// region:
// Reset():
// sim: Shorthand for "static int Main"
// struct:
// svm: Shorthand for "static void Main"
// switch: (I.E. when you enter a password correctly and incorrectly)
// Start():
// try:
// tryf:
// unchecked:
// unsafe:
// using:
// Update():
// while:

// 3. ???

// abstract: Makes a ScriptableObject into another Monobehavior

// 4. Coding Parameters

// Channels:
// data:
// hasFocus:
// pauseStatus:
